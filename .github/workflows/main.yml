name: Deploy to EC2

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REGISTRY: 602151476685.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: nwksecurityphishing
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: SSH into EC2 and pull & run Docker container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        envs: DAGSHUB_USERNAME,DAGSHUB_PASSWORD
        script: |
          docker rm -f nwksecurityphishing || true
          docker pull 602151476685.dkr.ecr.ap-south-1.amazonaws.com/nwksecurityphishing:latest
          docker run -d \
            -e DAGSHUB_USERNAME=${{ secrets.DAGSHUB_USERNAME }} \
            -e DAGSHUB_PASSWORD=${{ secrets.DAGSHUB_PASSWORD }} \
            --name nwksecurityphishing2 \
            602151476685.dkr.ecr.ap-south-1.amazonaws.com/nwksecurityphishing:latest
